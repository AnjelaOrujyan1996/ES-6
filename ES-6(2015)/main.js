// Used links`
// ==========> 1) https://learn.javascript.ru/es-modern
// ==========> 2) http://es6-features.org/#GeneratorFunctionIteratorProtocol

//                                                  1
// [1] ===================================== > LET <-> VAR < =====================================

// *********************************************************************************
// Область видимости переменной let – блок {...}.
// run this block
// var x = 5;
// if (true) {
//     var x = 10;
//     alert(x);  // 10 (внутри блока)
// }
// alert(x);  // 10 (снаружи блока то же самое)

// make comment this block and run next block

// let x = 5; // (*)
// if (true) {
//     let x = 10;
//     alert(x); // 10 (внутри блока)
// }

// alert(x); // 5 (снаружи блока значение не изменилось)

// make comment previous blocks and run next block

// if (true) {
//     let x = 10;
//     alert(x); // 10 (внутри блока)
// }
// alert(x); // ошибка!
// *********************************************************************************

// *********************************************************************************
// make comment previous blocks and run next block
// Переменная let видна только после объявления.

// alert(a); // undefined
// var a = 5;

// make comment previous blocks and run next block

// alert(a); // ошибка, нет такой переменной
// let a = 5;

// make comment previous blocks and run next block

// Заметим также, что переменные let нельзя повторно объявлять.
// let x;
// let x; // ошибка: переменная x уже объявлена
// *********************************************************************************

// *********************************************************************************
// make comment previous blocks and run next block
// for (let i = 0; i < 10; i++) { /* … */
// }
// alert(i); // ошибка: глобальной i нет

// make comment previous blocks and run next block
// for (var i = 0; i < 10; i++) { /* … */
// }
// alert(i); // 10
// *********************************************************************************

// *********************************************************************************
// make comment previous blocks and run next block
// const user = {
//     name: "Angela"
// };
//
// user.name = "Anna"; // допустимо
// user = 5; // нельзя, будет ошибка

// *********************************************************************************

//                                                  2
// [1] ===================================== > DESTRUCTURING < =====================================

// *********************************************************************************
// make comment previous blocks and run next block

// let [fruit1, fruit2] = ["apple", "banan"];
//
// alert(fruit1); // Илья
// alert(fruit2);  // Кантор
//
// let [, , title] = "Юлий Цезарь Император Рима".split(" ");
// alert(title); // Император
// *********************************************************************************

// *********************************************************************************
// make comment previous blocks and run next block

// Если мы хотим получить и последующие значения массива,
// но не уверены в их числе – можно добавить ещё один параметр,
// который получит «всё остальное»,
// при помощи оператора "..." («spread», троеточие)

// let [firstName, lastName, ...rest] = "Юлий Цезарь Император Рима".split(" ");
//
// alert(firstName); // Юлий
// alert(lastName);  // Цезарь
// alert(rest);      // Император,Рима (массив из 2х элементов)
// *********************************************************************************

// *********************************************************************************
// make comment previous blocks and run next block
// function defaultLastName() {
//     return Date.now() + '-visitor';
// }
//
// // lastName получит значение, соответствующее текущей дате:
// let [x, y = defaultLastName()] = ["Вася"];
//
// alert(x); // Вася
// alert(y);  // 1436...-visitor
// *********************************************************************************

// *********************************************************************************
// // make comment previous blocks and run next block

// let options = {
//     title: "Меню",
//     width: {
//         x: {
//             y: 100
//         }
//     },
//     height: 200
// };
//
// let {title, width:{x: {y : o}}, height} = options;
//
// alert(title);  // Меню
// alert(o);  // 100
// alert(height); // 200

// let xyz = {
//     title: "Меню"
// };
//
// let {x=100, y=200, z} = xyz;
//
// alert(x);  // Меню
// alert(y);  // 100
// alert(z); // 200

// *********************************************************************************

// *********************************************************************************
// make comment previous blocks and run next block

// let options = {
//     title: "Меню",
//     width: 100,
//     height: 200
// };
//
// let {title, ...size} = options;

// title = "Меню"
// size = { width: 100, height: 200} (остаток)

// *********************************************************************************

// *********************************************************************************
// make comment previous blocks and run next block
//
// // let a, b;
// // {a, b} = {a:5, b:6}; // будет ошибка, оно посчитает, что {a,b} - блок

// let a, b;
// ({a, b} = {a:5, b:6}); // внутри выражения это уже не блок
// alert(a);
// alert(b);
// *********************************************************************************

// *********************************************************************************
// make comment previous blocks and run next block
// let options = {
//     size: {
//         width: 100,
//         height: 200
//     },
//     items: ["Пончик", "Пирожное"]
// }
//
// let { title="Меню", size: {width:w, height}, items: [item1, item2] } = options;
//
// // Меню 100 200 Пончик Пирожное
// alert(title);  // Меню
// alert(w);  // 100
// alert(height); // 200
// alert(item1);  // Пончик
// alert(item2);  // Пирожное
// *********************************************************************************

//                                                3
// [1] ===================================== > FUNCTION < =====================================

// *********************************************************************************
// make comment previous blocks and run next block

// function showMenu(title = "Заголовок", width = 100, height = 200) {
//     alert('title=' + title + ' width=' + width + ' height=' + height);
// }
// // При передаче любого значения, кроме undefined,
// // включая пустую строку, ноль или null,
// // параметр считается переданным, и значение по умолчанию не используется.
//
// showMenu(undefined, null);
// // title=Заголовок width=null height=200

// *********************************************************************************

// *********************************************************************************
// make comment previous blocks and run next block
// Оператор spread вместо arguments

// function showName(firstName, lastName, ...rest) {
//     alert(firstName + ' ' + lastName + ' - ' + rest);
// }
//
// // выведет: Юлий Цезарь - Император,Рима
// showName("Юлий", "Цезарь", "Император", "Рима");

// let numbers = [2, 3, 15];
// // Оператор ... в вызове передаст массив как список аргументов
// // Этот вызов аналогичен Math.max(2, 3, 15)
// let max = Math.max(...numbers);
// alert( max ); // 15

// // function f(arg1, ...rest, arg2) {} // arg2 после ...rest будет ошибка
// *********************************************************************************

// *********************************************************************************
// make comment previous blocks and run next block

//     // in es-5
// let group1 = {
//     title: "Наш курс",
//     students: ["Вася", "Петя", "Даша"],
//
//     showList: function() {
//         var self = this;
//         this.students.forEach(function(student){
//             alert(self.title + ': ' + student);
//         })
//     }
// }
//
// group1.showList();
//
//     // in es-6
// let group2 = {
//     title: "Наш курс",
//     students: ["Вася", "Петя", "Даша"],
//
//     showList: function() {
//         this.students.forEach(student => {
//             alert(this.title + ': ' + student);
//         })
//     }
// }
//
// group2.showList();
// *********************************************************************************

//                                                  4
// [1] ===================================== > STRINGS < =====================================

// *********************************************************************************
// make comment previous blocks and run next block

// alert(`моя
//   многострочная
//   строка`);
//
// let apples = 2;
// let oranges = 3;
//
// alert(`${apples} + ${oranges} = ${apples + oranges}`); // 2 + 3 = 5

// *********************************************************************************






